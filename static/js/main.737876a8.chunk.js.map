{"version":3,"sources":["components/CountryPicker/Countrypicker.module.css","components/Chart/Chart.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/Countrypicker.jsx","components/Chart/Chart.jsx","media/worldmap.svg","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","item","component","Card","xs","md","cx","card","infected","hvr_sweep_to_top","CardContent","cardContent","Typography","color","variant","gutterBottom","style","fontFamily","fontWeight","Date","toDateString","marginTop","start","end","value","duration","separator","hvr_card2","hvr_card3","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Countrypicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","formcontrol","NativeSelect","defaultValue","onChange","e","target","i","Chart","setDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","disply","text","App","state","fetcheddata","setState","this","lander","onInit","typewriter","typeString","pauseFor","worldmap","src","alt","fontSize","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.737876a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontrol\":\"Countrypicker_formcontrol__HyUtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2ihHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2SvnU\",\"card\":\"Cards_card__328PF\",\"hvr_sweep_to_top\":\"Cards_hvr_sweep_to_top__WisTz\",\"hvr_card2\":\"Cards_hvr_card2__1zYgz\",\"hvr_card3\":\"Cards_hvr_card3__29j63\",\"cardContent\":\"Cards_cardContent__1u2s8\",\"infected\":\"Cards_infected__1dKUb\",\"recovered\":\"Cards_recovered__1xke5\",\"deaths\":\"Cards_deaths__1pJq-\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data : {confirmed,recovered,deaths,lastUpdate}}) => {\r\n  if(!confirmed){\r\n    return 'Loading....';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={4} justify-content=\"space-around\">\r\n        <Grid item component={Card} xs={10} md={3} className={cx(styles.card,styles.infected,styles.hvr_sweep_to_top)} >\r\n          <CardContent className={styles.cardContent}>\r\n            <Typography  color=\"textSecondary\" variant=\"h5\" gutterBottom style={{fontFamily:\"archia\",fontWeight:\"bold\"}}>\r\n              INFECTED\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              <div>\r\n                {new Date(lastUpdate).toDateString()}\r\n              </div>\r\n              </Typography>\r\n           \r\n            <Typography variant=\"h4\" style={{marginTop:\"30px\",fontFamily:\"archia\",fontWeight:\"bold\"}}>\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography variant=\"h6\" style={{marginTop:\"30px\",fontFamily:\"archia\",fontWeight:\"bold\"}}>\r\n              CONFIRMED\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={10} md={3} className={cx(styles.card,styles.recovered,styles.hvr_card2)}>\r\n          <CardContent>\r\n          <Typography  color=\"textSecondary\" variant=\"h5\" gutterBottom style={{fontFamily:\"archia\",fontWeight:\"bold\"}}>\r\n              RECOVERED\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              <div>\r\n                {new Date(lastUpdate).toDateString()}\r\n              </div>\r\n              </Typography>\r\n           \r\n            <Typography variant=\"h4\" style={{marginTop:\"30px\",fontFamily:\"archia\",fontWeight:\"bold\"}}>\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography variant=\"h6\" style={{marginTop:\"30px\",fontFamily:\"archia\",fontWeight:\"bold\"}}>\r\n              RECOVERED\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={10} md={3} className={cx(styles.card,styles.deaths,styles.hvr_card3)}>\r\n          <CardContent>\r\n          <Typography  color=\"textSecondary\" variant=\"h5\" gutterBottom style={{fontFamily:\"archia\",fontWeight:\"bold\"}}>\r\n              DEATHS\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              <div>\r\n                {new Date(lastUpdate).toDateString()}\r\n              </div>\r\n              </Typography>\r\n           \r\n            <Typography variant=\"h4\" style={{marginTop:\"30px\",fontFamily:\"archia\",fontWeight:\"bold\"}}>\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography variant=\"h6\" style={{marginTop:\"30px\",fontFamily:\"archia\",fontWeight:\"bold\"}}>\r\n              DECEASED\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const { data : { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data :{countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport default fetchData;","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport {fetchCountries} from \"../../api\";\r\nimport styles from \"./Countrypicker.module.css\";\r\n\r\nconst Countrypicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n        setFetchedCountries(await fetchCountries())\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n  console.log(fetchedCountries);\r\n\r\n  return (\r\n    <FormControl className={styles.formcontrol}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"global\">Global</option>\r\n        {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n        \r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countrypicker;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nexport const Chart = ({data : {confirmed,recovered,deaths},country}) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgb(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null\r\n  );\r\n\r\n  console.log(confirmed);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0,0,255,0.5)\",\r\n              \"rgba(0,255,0,0.5)\",\r\n              \"rgba(255,0,0,0.5)\",\r\n            ],\r\n            data:[confirmed.value,recovered.value,deaths.value]\r\n          }\r\n        ]\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { disply: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null\r\n  );\r\n\r\n  return <div className={styles.container}>\r\n    {/* {country ? lineChart : barChart} */}\r\n    {barChart}\r\n    {lineChart}\r\n  </div>;\r\n};\r\n\r\nexport default Chart;\r\n","export default __webpack_public_path__ + \"static/media/worldmap.b5173c04.svg\";","import React from \"react\";\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport Countrypicker from \"./components/CountryPicker/Countrypicker\";\r\nimport Chart from \"./components/Chart/Chart\";\r\n// import logo from \"./media/covid_back.png\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\nimport worldmap from \"./media/worldmap.svg\";\r\nimport Typewriter from \"typewriter-effect\";\r\n// import virus from \"./media/virus.svg\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetcheddata = await fetchData();\r\n    this.setState({ data: fetcheddata });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    console.log(country);\r\n    const fetcheddata = await fetchData(country);\r\n    console.log(fetcheddata);\r\n    this.setState({ data: fetcheddata, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        {/* <div className={styles.landerpage}>\r\n          <Typewriter\r\n            onInit={(typewriter) => {\r\n              typewriter.typeString(\"COVID-19\").start();\r\n            }}\r\n          />\r\n        </div> */}\r\n\r\n        <div className={styles.lander}>\r\n          <div>\r\n            <Typewriter\r\n              onInit={(typewriter) => {\r\n                typewriter\r\n                  .typeString(\"COVID-19\")\r\n                  .pauseFor(2000)\r\n                  .start();\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={styles.text}>COVID19INDIA\r\n             We stand with everyone fighting on the frontlines</div>\r\n        <img className={styles.worldmap} src={worldmap} alt=\"\" />\r\n        <Cards data={data} />\r\n        <Countrypicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data}/>\r\n        <div style={{fontSize:\"10px\"}}>\r\n          <h4><a href=\"https://github.com/aneeshawadhiya\"> Developer: Aneesh Awadhiya</a></h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App.js';\r\n\r\nReactDOM.render(<App /> , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1iLuZ\",\"text\":\"App_text__2ZuCj\",\"lander\":\"App_lander__1hWyi\",\"worldmap\":\"App_worldmap__1AytI\",\"typewriter\":\"App_typewriter__2Fw8l\"};"],"sourceRoot":""}